/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package net.loves.modelos.visao;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.loves.modelos.controller.ControleContato;
import net.loves.modelos.interfaces.IcontatoCrud;
import net.loves.modelos.classes.*;
import net.loves.modelos.enumeration.enumSexo;
import net.loves.modelos.visao.telainicial;


/**
 *
 * @author Thiago
 * 
 */
public class telaPrincipal extends javax.swing.JFrame {
    IcontatoCrud objControle = null;
   
 
    /**
     * Creates new form telaPrincipal
     */
    public telaPrincipal() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        try {
            objControle = new ControleContato();
             mostrarContatosNaGrid();
                
            } catch (Exception erro) {
                 JOptionPane.showMessageDialog(this, erro.getMessage());
            }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4NOME = new javax.swing.JLabel();
        jLabel5IDENTIFICADOR = new javax.swing.JLabel();
        jLabel6EMAIL = new javax.swing.JLabel();
        jTextFieldIdentificador = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1contatos = new javax.swing.JTable();
        jTextFieldNome = new javax.swing.JTextField();
        jLabel6EMAIL1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButtonExcluir = new javax.swing.JButton();
        Consultar = new javax.swing.JButton();
        jButtonAlterar = new javax.swing.JButton();
        jButton3Incluir = new javax.swing.JButton();
        ConsultarPorNome = new javax.swing.JButton();
        voltarTabela = new javax.swing.JButton();
        jFormattedTextField1telefone = new javax.swing.JFormattedTextField();
        jTextField1email = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setForeground(new java.awt.Color(102, 102, 102));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(33, 11, 44));
        jLabel3.setText("DADOS DO CONTATO");

        jLabel4NOME.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel4NOME.setForeground(new java.awt.Color(33, 11, 44));
        jLabel4NOME.setText("Nome:");

        jLabel5IDENTIFICADOR.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel5IDENTIFICADOR.setForeground(new java.awt.Color(33, 11, 44));
        jLabel5IDENTIFICADOR.setText("Identificador:");

        jLabel6EMAIL.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel6EMAIL.setForeground(new java.awt.Color(33, 11, 44));
        jLabel6EMAIL.setText("Telefone:");

        jLabel2.setBackground(new java.awt.Color(33, 11, 44));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(33, 11, 44));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________");

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(33, 11, 44));
        jLabel7.setText("Sexo:");

        jComboBox1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jComboBox1.setForeground(new java.awt.Color(33, 11, 44));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MASCULINO", "FEMININO" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTable1contatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Identificador", "Nome", "Telefone", "Email", "Sexo"
            }
        ));
        jScrollPane1.setViewportView(jTable1contatos);

        jTextFieldNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNomeKeyReleased(evt);
            }
        });

        jLabel6EMAIL1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel6EMAIL1.setForeground(new java.awt.Color(33, 11, 44));
        jLabel6EMAIL1.setText("Email:");

        jPanel2.setBackground(new java.awt.Color(33, 11, 44));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButtonExcluir.setBackground(new java.awt.Color(33, 11, 44));
        jButtonExcluir.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jButtonExcluir.setForeground(new java.awt.Color(204, 204, 204));
        jButtonExcluir.setText("Excluir");
        jButtonExcluir.setBorder(null);
        jButtonExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExcluirActionPerformed(evt);
            }
        });

        Consultar.setBackground(new java.awt.Color(33, 11, 44));
        Consultar.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        Consultar.setForeground(new java.awt.Color(204, 204, 204));
        Consultar.setText("Consultar Por ID");
        Consultar.setBorder(null);
        Consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarActionPerformed(evt);
            }
        });

        jButtonAlterar.setBackground(new java.awt.Color(33, 11, 44));
        jButtonAlterar.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jButtonAlterar.setForeground(new java.awt.Color(204, 204, 204));
        jButtonAlterar.setText("Alterar");
        jButtonAlterar.setBorder(null);
        jButtonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAlterarActionPerformed(evt);
            }
        });

        jButton3Incluir.setBackground(new java.awt.Color(33, 11, 44));
        jButton3Incluir.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        jButton3Incluir.setForeground(new java.awt.Color(204, 204, 204));
        jButton3Incluir.setText("Incluir");
        jButton3Incluir.setBorder(null);
        jButton3Incluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3IncluirActionPerformed(evt);
            }
        });

        ConsultarPorNome.setBackground(new java.awt.Color(33, 11, 44));
        ConsultarPorNome.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        ConsultarPorNome.setForeground(new java.awt.Color(204, 204, 204));
        ConsultarPorNome.setText("Consultar Por Nome");
        ConsultarPorNome.setBorder(null);
        ConsultarPorNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultarPorNomeActionPerformed(evt);
            }
        });

        voltarTabela.setBackground(new java.awt.Color(33, 11, 44));
        voltarTabela.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        voltarTabela.setForeground(new java.awt.Color(204, 204, 204));
        voltarTabela.setText("Limpar Tabela");
        voltarTabela.setBorder(null);
        voltarTabela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarTabelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(voltarTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ConsultarPorNome, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                    .addComponent(Consultar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonAlterar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3Incluir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addComponent(jButton3Incluir, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jButtonExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButtonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(Consultar, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(ConsultarPorNome, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(voltarTabela, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(127, Short.MAX_VALUE))
        );

        try {
            jFormattedTextField1telefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("## ## ########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jFormattedTextField1telefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFormattedTextField1telefoneActionPerformed(evt);
            }
        });

        jTextField1email.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextField1emailFocusLost(evt);
            }
        });
        jTextField1email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1emailActionPerformed(evt);
            }
        });
        jTextField1email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1emailKeyReleased(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(33, 11, 44));
        jLabel1.setText("Agenda de Contatos");

        jLabel4.setForeground(new java.awt.Color(33, 11, 44));
        jLabel4.setText("______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(57, 57, 57)
                                        .addComponent(jLabel5IDENTIFICADOR))
                                    .addComponent(jLabel4NOME, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jTextFieldIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6EMAIL1))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel7)
                                            .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(147, 147, 147)
                                                .addComponent(jLabel6EMAIL))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(29, 29, 29)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jFormattedTextField1telefone, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                                    .addComponent(jTextField1email)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(1208, 1208, 1208)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1383, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(363, 363, 363)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 785, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(776, 776, 776))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(29, 29, 29)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5IDENTIFICADOR)
                    .addComponent(jTextField1email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6EMAIL1))
                .addGap(53, 53, 53)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4NOME)
                    .addComponent(jTextFieldNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6EMAIL)
                    .addComponent(jFormattedTextField1telefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(254, 254, 254))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1045, 1045, 1045))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1463, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 453, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

 private void selectNaGrid() {
    try {
        // Obtém o nome do campo de busca
        String nome = jTextFieldNome.getText().trim();

        // Verifica se o nome foi preenchido
        if (nome.isEmpty()) {
            throw new Exception("Digite um nome para buscar!");
        }

        // Consulta o contato pelo nome
        Contato contato = objControle.consultar(nome); // Método consultar adaptado

        // Configura o modelo da tabela
        DefaultTableModel model = (DefaultTableModel) jTable1contatos.getModel();
        model.setRowCount(0); // Limpa a tabela antes de inserir os dados

        // Verifica se o contato foi encontrado
        if (contato != null) {
            // Adiciona o contato como linha na tabela
            String[] linha = new String[5];
            linha[0] = String.valueOf(contato.getIdContato());
            linha[1] = contato.getNome();
            linha[2] = contato.getFone().toString();
            linha[3] = contato.getEmail();
            linha[4] = contato.getSexo().toString();
            model.addRow(linha);
        } else {
            JOptionPane.showMessageDialog(this, "Contato não encontrado!", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    } catch (Exception erro) {
        JOptionPane.showMessageDialog(this, "Erro ao buscar contato: " + erro.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}

 
 private void selectPorIDNaGrid() {
    try {
        // Obtém o ID do campo de busca
        String idTexto = jTextFieldIdentificador.getText().trim();

        // Verifica se o campo de ID foi preenchido
        if (idTexto.isEmpty()) {
            throw new Exception("Digite um ID para buscar!");
        }

        // Converte o texto do ID para um número inteiro
        int idContato;
        try {
            idContato = Integer.parseInt(idTexto);
        } catch (NumberFormatException e) {
            throw new Exception("O ID deve ser um número válido!");
        }

        // Consulta o contato pelo ID
        Contato contato = objControle.consultar(idContato); // Método consultar pelo ID

        // Configura o modelo da tabela
        DefaultTableModel model = (DefaultTableModel) jTable1contatos.getModel();
        model.setRowCount(0); // Limpa a tabela antes de inserir os dados

        // Verifica se o contato foi encontrado
        if (contato != null) {
            // Adiciona o contato como linha na tabela
            String[] linha = new String[5];
            linha[0] = String.valueOf(contato.getIdContato());
            linha[1] = contato.getNome();
            linha[2] = contato.getFone().toString();
            linha[3] = contato.getEmail();
            linha[4] = contato.getSexo().toString();
            model.addRow(linha);
        } else {
            JOptionPane.showMessageDialog(this, "Contato não encontrado!", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    } catch (Exception erro) {
        JOptionPane.showMessageDialog(this, "Erro ao buscar contato: " + erro.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
}

  
    
    private void mostrarContatosNaGrid(){
 try {
   List<Contato> listaDeContatos = null;
   listaDeContatos = objControle.ListagemDeContatos();
   DefaultTableModel model =  (DefaultTableModel) jTable1contatos.getModel();
   model.setNumRows(0);
   if(listaDeContatos.isEmpty())
     throw new Exception("Lista de Contatos esta Vazia");
   for(Contato objContato:listaDeContatos){
   //for(int pos = 0; pos < listaDeContatos.size(); pos++){
     String[] linha = new String[5];
     //Contato objContato = listaDeContatos.get(pos);
     linha[0]= objContato.getIdContato()+ "";
     linha[1]= objContato.getNome();
     linha[2]= objContato.getFone().toString();
     linha[3]= objContato.getEmail();
     linha[4]= objContato.getSexo().toString();
     model.addRow(linha);
   }  
 } catch (Exception erro) {
     JOptionPane.showMessageDialog(rootPane, erro.getMessage());
   }    
}
    
    
    
    
    
    private void jButton3IncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3IncluirActionPerformed
  
   String nome = jTextFieldNome.getText().trim();
   if (nome.matches("[a-zA-ZáéíóúÁÉÍÓÚãõÃÕçÇ\\s]+")) {
    System.out.println("Nome válido: " + nome);
} else {
    JOptionPane.showMessageDialog(null, "Por favor, insira apenas letras no nome.", "Erro", JOptionPane.ERROR_MESSAGE);
}
   
   
   
    String telefone = jFormattedTextField1telefone.getText().trim();
    
    String email = jTextField1email.getText().trim();
     if (!email.matches("^[\\w.-]+@[\\w-]+\\.[a-zA-Z]{2,}$")) {
    throw new IllegalArgumentException("Email inválido.");
}


    if (nome.isEmpty() || telefone.isEmpty() || email.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Preencha todos os campos obrigatórios.");
        return;
    }

    try {
    

        int ddi = Integer.parseInt(telefone.substring(0, 2));
        int ddd = Integer.parseInt(telefone.substring(3, 5));
        int numero = Integer.parseInt(telefone.substring(6));

        Telefone fone = new Telefone(ddi, ddd, numero);

         int index = jComboBox1.getSelectedIndex();
           enumSexo sexo;
           if (index == 0) {
               sexo = enumSexo.MASCULINO;
           } else {
               sexo = enumSexo.FEMININO;
           }
        int idContato = 0; 

        Contato pessoa = new Contato(idContato, nome, fone, sexo, email); 
        objControle.incluir(pessoa);  
        

          String saida = "CONTATO SALVO\n";
            mostrarContatosNaGrid();
          JOptionPane.showMessageDialog(null, saida);

    } catch (Exception erro) {
        JOptionPane.showMessageDialog(this, erro.getMessage());
    }
    }//GEN-LAST:event_jButton3IncluirActionPerformed

    private void jButtonExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExcluirActionPerformed
        // TODO add your handling code here:
       try {
    String idText = jTextFieldIdentificador.getText().trim();
    
    if (idText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "O campo Identificador não pode ficar em branco.");
        return;
    }
    
    int id = Integer.parseInt(idText);
    
    objControle.excluir(id);
    JOptionPane.showMessageDialog(this, "Registro excluído com sucesso!");
    mostrarContatosNaGrid();
    

} catch (Exception erro) {
    JOptionPane.showMessageDialog(this,  erro.getMessage());
}
      
    }//GEN-LAST:event_jButtonExcluirActionPerformed

    private void jButtonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAlterarActionPerformed
   try {
    // Validação do ID
    String idStr = jTextFieldIdentificador.getText().trim();
    if (idStr.isEmpty()) {
        throw new IllegalArgumentException("ID não pode ser vazio.");
    }

    int idContato;
    try {
        idContato = Integer.parseInt(idStr); // Convertendo o ID para inteiro
    } catch (NumberFormatException e) {
        throw new IllegalArgumentException("ID inválido. Por favor, insira um número válido.");
    }

    // Validação do nome
    String nome = jTextFieldNome.getText().trim();
    if (!nome.matches("[a-zA-ZáéíóúÁÉÍÓÚãõÃÕçÇ\\s]+")) {
        throw new IllegalArgumentException("O nome deve conter apenas letras e espaços.");
    }

    // Validação do telefone
    String telefone = jFormattedTextField1telefone.getText().trim();
    

    // Validação do email
    String email = jTextField1email.getText().trim();
    if (!email.matches("^[\\w.-]+@[\\w-]+\\.[a-zA-Z]{2,}$")) {
        throw new IllegalArgumentException("Email inválido.");
    }

    // Verificação de campos obrigatórios
    if (nome.isEmpty() || telefone.isEmpty() || email.isEmpty()) {
        throw new IllegalArgumentException("Preencha todos os campos obrigatórios.");
    }

    // Separação do telefone em partes
    int ddi = Integer.parseInt(telefone.substring(0, 2));
    int ddd = Integer.parseInt(telefone.substring(3, 5));
    int numero = Integer.parseInt(telefone.substring(6));

    Telefone fone = new Telefone(ddi, ddd, numero);

    // Seleção do sexo
    int index = jComboBox1.getSelectedIndex();
    enumSexo sexo;
    if (index == 0) {
        sexo = enumSexo.MASCULINO;
    } else if (index == 1) {
        sexo = enumSexo.FEMININO;
    } else {
        throw new IllegalArgumentException("Sexo inválido selecionado.");
    }

    // Criação do contato e chamada do método de alteração
    Contato pessoa = new Contato(idContato, nome, fone, sexo, email);
    objControle.alterar(pessoa);
    

    JOptionPane.showMessageDialog(null, "CONTATO ATUALIZADO.");
    
    mostrarContatosNaGrid();
} catch (Exception erro) {
    JOptionPane.showMessageDialog(this, erro.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
}
   
   
    }//GEN-LAST:event_jButtonAlterarActionPerformed

    private void ConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarActionPerformed
        // TODO add your handling code here:
         try{
              String idText = jTextFieldIdentificador.getText().trim();
    
    
    if (idText.isEmpty()) {
        JOptionPane.showMessageDialog(this, "O campo Identificador não pode ficar em branco.");
        return;
    }
             int id = Integer.parseInt(jTextFieldIdentificador.getText().trim());
          Contato pessoa = objControle.consultar(id);
          
          selectPorIDNaGrid();
                 
            
        } catch(Exception erro){
            JOptionPane.showMessageDialog(this,erro.getMessage() );
        }          
    }//GEN-LAST:event_ConsultarActionPerformed

    private void jTextFieldNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNomeKeyReleased
        // TODO add your handling code here:
        jTextFieldNome.setText(jTextFieldNome.getText().toUpperCase());
    }//GEN-LAST:event_jTextFieldNomeKeyReleased

    private void jTextField1emailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1emailKeyReleased
        // TODO add your handling code here:
                jTextField1email.setText(jTextField1email.getText().toUpperCase());

    }//GEN-LAST:event_jTextField1emailKeyReleased

    private void jTextField1emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1emailActionPerformed

    private void jTextField1emailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField1emailFocusLost
        // TODO add your handling code here:
        String email = jTextField1email.getText();
String emailPattern = "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$";
if (!email.matches(emailPattern)) {
        JOptionPane.showMessageDialog(this, "E-mail inválido! Digite um e-mail no formato correto.");
        jTextField1email.requestFocus();
        }
    }//GEN-LAST:event_jTextField1emailFocusLost

    private void ConsultarPorNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultarPorNomeActionPerformed
        // TODO add your handling code here:
                try {
        // Obtém o nome digitado
        String nomeText = jTextFieldNome.getText().trim();

        // Verifica se o campo está vazio
        if (nomeText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "O campo NOME não pode ficar em branco.");
            return;
        }

        // Chama o método para exibir o contato na tabela
        selectNaGrid();

    } catch (Exception erro) {
        // Exibe mensagens de erro, se ocorrerem
        JOptionPane.showMessageDialog(this, erro.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_ConsultarPorNomeActionPerformed

    private void jFormattedTextField1telefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFormattedTextField1telefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jFormattedTextField1telefoneActionPerformed

    private void voltarTabelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarTabelaActionPerformed
        // TODO add your handling code here:
        mostrarContatosNaGrid();
    }//GEN-LAST:event_voltarTabelaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(telaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(telaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(telaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(telaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new telainicial().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Consultar;
    private javax.swing.JButton ConsultarPorNome;
    private javax.swing.JButton jButton3Incluir;
    private javax.swing.JButton jButtonAlterar;
    private javax.swing.JButton jButtonExcluir;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JFormattedTextField jFormattedTextField1telefone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel4NOME;
    private javax.swing.JLabel jLabel5IDENTIFICADOR;
    private javax.swing.JLabel jLabel6EMAIL;
    private javax.swing.JLabel jLabel6EMAIL1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1contatos;
    private javax.swing.JTextField jTextField1email;
    private javax.swing.JTextField jTextFieldIdentificador;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JButton voltarTabela;
    // End of variables declaration//GEN-END:variables
}
